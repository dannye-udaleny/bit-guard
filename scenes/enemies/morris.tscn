[gd_scene load_steps=26 format=2]

[ext_resource path="res://scenes/enemies/enemy.tscn" type="PackedScene" id=1]
[ext_resource path="res://sprites/enemies/morris/attack/frame_20.png" type="Texture" id=2]
[ext_resource path="res://sprites/enemies/morris/attack/frame_22.png" type="Texture" id=3]
[ext_resource path="res://sprites/enemies/morris/attack/frame_21.png" type="Texture" id=4]
[ext_resource path="res://sprites/enemies/morris/attack/frame_19.png" type="Texture" id=5]
[ext_resource path="res://sprites/enemies/morris/attack/frame_23.png" type="Texture" id=6]
[ext_resource path="res://sprites/enemies/morris/idle/frame_11.png" type="Texture" id=7]
[ext_resource path="res://sprites/enemies/morris/idle/frame_7.png" type="Texture" id=8]
[ext_resource path="res://sprites/enemies/morris/idle/frame_10.png" type="Texture" id=9]
[ext_resource path="res://sprites/enemies/morris/idle/frame_9.png" type="Texture" id=10]
[ext_resource path="res://sprites/enemies/morris/idle/frame_8.png" type="Texture" id=11]
[ext_resource path="res://sprites/enemies/morris/run/frame_18.png" type="Texture" id=12]
[ext_resource path="res://sprites/enemies/morris/run/frame_13.png" type="Texture" id=13]
[ext_resource path="res://sprites/enemies/morris/run/frame_15.png" type="Texture" id=14]
[ext_resource path="res://sprites/enemies/morris/run/frame_14.png" type="Texture" id=15]
[ext_resource path="res://sprites/enemies/morris/run/frame_16.png" type="Texture" id=16]
[ext_resource path="res://sprites/enemies/morris/run/frame_17.png" type="Texture" id=17]
[ext_resource path="res://sprites/enemies/morris/death/frame_2.png" type="Texture" id=18]
[ext_resource path="res://scripts/enemies/morris.gd" type="Script" id=19]

[sub_resource type="CapsuleShape2D" id=5]
<<<<<<< Updated upstream
radius = 10.0
height = 12.0
=======
height = 5.99996
>>>>>>> Stashed changes

[sub_resource type="RectangleShape2D" id=4]
extents = Vector2( 11, 6.5 )

[sub_resource type="Shader" id=6]
code = "shader_type canvas_item;

uniform vec4 baseColor: hint_color = vec4(0.3058, 0.835, 0.960, 1.);
uniform float speed = 2.0;
uniform vec4 linesColor: hint_color = vec4(0.633232, 0.910156, 0.555693, 1.);
uniform float linesColorIntensity = 5.;
uniform sampler2D hologramTexture;
uniform vec2 hologramTextureTiling = vec2(1., 5.);

uniform float shake_power = 0.03;
uniform float shake_rate : hint_range( 0.0, 1.0 ) = 0.2;
uniform float shake_speed = 5.0;
uniform float shake_block_size = 30.5;
uniform float shake_color_rate : hint_range( 0.0, 1.0 ) = 0.01;


uniform float progress : hint_range(0.0, 1.0);
uniform float noise_desnity = 60;
uniform float beam_size : hint_range(0.01, 0.15);
uniform vec4 color : hint_color = vec4(0.0, 1.02, 1.2, 1.0);

vec2 tilingAndOffset(vec2 uv, vec2 tiling, vec2 offset) {
    return mod(uv * tiling + offset, 1);
}

vec2 random_2(vec2 uv){
    uv = vec2( dot(uv, vec2(127.1,311.7) ),
               dot(uv, vec2(269.5,183.3) ) );
    return -1.0 + 2.0 * fract(sin(uv) * 43758.5453123);
}

float flash(vec2 uv) {
    vec2 uv_index = floor(uv);
    vec2 uv_fract = fract(uv);

    vec2 blur = smoothstep(0.0, 1.0, uv_fract);

    return mix( mix( dot( random_2(uv_index + vec2(0.0,0.0) ), uv_fract - vec2(0.0,0.0) ),
                     dot( random_2(uv_index + vec2(1.0,0.0) ), uv_fract - vec2(1.0,0.0) ), blur.x),
                mix( dot( random_2(uv_index + vec2(0.0,1.0) ), uv_fract - vec2(0.0,1.0) ),
                     dot( random_2(uv_index + vec2(1.0,1.0) ), uv_fract - vec2(1.0,1.0) ), blur.x), blur.y) * 0.5 + 0.5;
}

float random_1( float seed )
{
	return fract( 543.2543 * sin( dot( vec2( seed, seed ), vec2( 3525.46, -54.3415 ) ) ) );
}

void fragment() {
    vec2 offset = vec2(TIME * speed / 100.0);
    vec2 tiling = tilingAndOffset(UV, hologramTextureTiling, offset);
    
    vec4 noise = texture(hologramTexture, tiling);
    
    float fresnel = 0.71;
    vec4 colorLines = linesColor * vec4(vec3(linesColorIntensity), 1.0);
    vec4 emission = colorLines * fresnel * noise;
    
    vec4 albedo = baseColor;
    float alpha = dot(noise.rgb, vec3(1.0));
    vec4 hologram;
    hologram.rgb = emission.rgb + (1.0 - emission.rgb) * albedo.rgb * albedo.a;
    hologram.a = emission.a + (1.0 - emission.a) * alpha;
    hologram.a = hologram.a + (1.0 - hologram.a) * albedo.a;
	
	float enable_shift = float(
		random_1( trunc( TIME * shake_speed ) )
	<	shake_rate
	);

	vec2 fixed_uv = UV;
	fixed_uv.x += (
		random_1(
			( trunc( UV.y * shake_block_size ) / shake_block_size )
		+	TIME
		) - 0.5
	) * shake_power * enable_shift;

	vec4 pixel_color = textureLod( TEXTURE, fixed_uv, 0.0 );
	pixel_color.r = mix(
		pixel_color.r
	,	textureLod( TEXTURE, fixed_uv + vec2( shake_color_rate, 0.0 ), 0.0 ).r
	,	enable_shift
	);
	pixel_color.b = mix(
		pixel_color.b
	,	textureLod( TEXTURE, fixed_uv + vec2( -shake_color_rate, 0.0 ), 0.0 ).b
	,	enable_shift
	);
	
	float flash_1 = flash(UV * noise_desnity) * UV.y;
	float d1 = step(progress, flash_1);
	float d2 = step(progress - beam_size, flash_1);
	vec3 beam = vec3(d2 - d1) * color.rgb;	
	
	COLOR = pixel_color;
    COLOR.rgb = COLOR.rgb + (1.0 - COLOR.rgb) * hologram.rgb;
    COLOR.a = min(COLOR.a, hologram.a);
	
	COLOR.rgb += beam;
	COLOR.a *= d2;	
}

"

[sub_resource type="ShaderMaterial" id=7]
shader = SubResource( 6 )
shader_param/baseColor = Color( 1, 1, 1, 0 )
shader_param/speed = -16.0
shader_param/linesColor = Color( 0, 0, 0, 1 )
shader_param/linesColorIntensity = 1.0
shader_param/hologramTextureTiling = Vector2( 1, 1 )
shader_param/shake_power = 0.03
shader_param/shake_rate = 0.0
shader_param/shake_speed = 5.0
shader_param/shake_block_size = 0.1
shader_param/shake_color_rate = 0.01
shader_param/progress = 0.0
shader_param/noise_desnity = 30.0
shader_param/beam_size = 0.15
shader_param/color = Color( 0, 1.02, 1.2, 1 )

[sub_resource type="SpriteFrames" id=3]
animations = [ {
"frames": [ ExtResource( 8 ), ExtResource( 11 ), ExtResource( 10 ), ExtResource( 9 ), ExtResource( 7 ) ],
"loop": true,
"name": "idle",
"speed": 15.0
}, {
"frames": [ ExtResource( 5 ), ExtResource( 2 ), ExtResource( 4 ), ExtResource( 3 ), ExtResource( 6 ) ],
"loop": true,
"name": "attack",
"speed": 15.0
}, {
"frames": [ ExtResource( 13 ), ExtResource( 15 ), ExtResource( 14 ), ExtResource( 16 ), ExtResource( 17 ), ExtResource( 12 ) ],
"loop": true,
"name": "run",
"speed": 15.0
}, {
"frames": [ ExtResource( 18 ) ],
"loop": true,
"name": "death",
"speed": 5.0
} ]

[sub_resource type="CircleShape2D" id=2]
resource_local_to_scene = true
radius = 20.0

[node name="enemy" instance=ExtResource( 1 )]
pause_mode = 1
script = ExtResource( 19 )
health = 5
contact_damage = 1
walk_speed = 50
knockback = 500.0

[node name="body" parent="." index="0"]
rotation = -1.5708
shape = SubResource( 5 )

[node name="hitbox" parent="." index="1"]
collision_layer = 8
collision_mask = 21

[node name="shape" parent="hitbox" index="0"]
position = Vector2( 0, 1.5 )
shape = SubResource( 4 )

[node name="body_sprite" parent="." index="2"]
material = SubResource( 7 )
position = Vector2( 0, -10 )
frames = SubResource( 3 )
animation = "idle"

[node name="sight_radius" parent="." index="3"]
visible = false

[node name="attack_radius" parent="." index="4"]
visible = false

[node name="shape" parent="attack_radius" index="0"]
shape = SubResource( 2 )
